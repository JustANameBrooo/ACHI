module auto_tester (
    input clk,  // clock
    input rst,  // reset
    input button[2],  // two buttons (left and right)
    output out_state[3],  // current testing state
    // 0: idle
    // 1: adder
    // 2: comparator
    // 3: boolean
    // 4: shifter
    // 5: multiplier
    output out_status[2],  // current tester status
    // 0: not done
    // 1: pass
    // 2: fail
  ) {
  
  test_adder test_adder(.clk(clk), .rst(rst));
  test_compare test_compare(.clk(clk), .rst(rst));
  test_boole test_boole(.clk(clk), .rst(rst));
  test_shifter test_shifter(.clk(clk), .rst(rst));
  test_multiply test_multiply(.clk(clk), .rst(rst));
  
  fsm state(.clk(clk), .rst(rst)) = {IDLE, ADDER, COMPARATOR, BOOLEAN, SHIFTER, MULTIPLIER};
  
  always {
    test_adder.start = 0;
    test_compare.start = 0;
    test_boole.start = 0;
    test_shifter.start = 0;
    test_multiply.start = 0;
    
    out_status = 2b00;
    out_state = state.q;

    // FSM for auto testing
    case(state.q) {
      state.IDLE:
        out_status = 2b00;
        if (button[0]) {  // pressed left
          state.d = state.MULTIPLIER;
        }
        else if (button[1]) {  // pressed right
          state.d = state.q + 1;
        }
        
      state.ADDER:
        test_adder.start = 1;
        out_status = test_adder.status;
        if (button[0]) {  // pressed left
          state.d = state.q - 1;
        }
        else if (button[1]) {  // pressed right
          state.d = state.q + 1;
        }
        
      state.COMPARATOR:
        test_compare.start = 1;
        out_status = test_compare.status;
        if (button[0]) {  // pressed left
          state.d = state.q - 1;
        }
        else if (button[1]) {  // pressed right
          state.d = state.q + 1;
        }
        
      state.BOOLEAN:
        test_boole.start = 1;
        out_status = test_boole.status;
        if (button[0]) {  // pressed left
          state.d = state.q - 1;
        }
        else if (button[1]) {  // pressed right
          state.d = state.q + 1;
        }
        
      state.SHIFTER:
        test_shifter.start = 1;
        out_status = test_shifter.status;
        if (button[0]) {  // pressed left
          state.d = state.q - 1;
        }
        else if (button[1]) {  // pressed right
          state.d = state.q + 1;
        }
        
      state.MULTIPLIER:
        test_multiply.start = 1;
        out_status = test_multiply.status;
        if (button[0]) {  // pressed left
          state.d = state.q - 1;
        }
        else if (button[1]) {  // pressed right
          state.d = state.IDLE;
        }
  }
}
